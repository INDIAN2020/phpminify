<?php abstract class WebDriverContainer extends WebDriverBase { public function element($using, $value) { try { $results = $this->curl( 'POST', '/element', array( 'using' => $using, 'value' => $value)); } catch (NoSuchElementWebDriverError $e) { throw new NoSuchElementWebDriverError( sprintf( 'Element not found with %s, %s', $using, $value) . "\n\n" . $e->getMessage(), $e->getResults()); } return $this->webDriverElement($results['value']); } public function elements($using, $value) { $results = $this->curl( 'POST', '/elements', array( 'using' => $using, 'value' => $value )); return array_filter(array_map( array($this, 'webDriverElement'), $results['value'])); } private function webDriverElement($value) { return (array_key_exists('ELEMENT', (array) $value)) ? new WebDriverElement( $this->getElementPath($value['ELEMENT']), $value['ELEMENT']) : null; } abstract protected function getElementPath($element_id); } 