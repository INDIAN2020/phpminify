<?php  abstract class WebDriverContainer extends WebDriverBase {  public function fn8($using, $s18) {  try {  $c = $this->fn6(  'POST',  '/fn8',  array(  'using' => $using,  's18' => $s18));  } catch (NoSuchElementWebDriverError $e) {  throw new NoSuchElementWebDriverError(  sprintf(  'Element not found with %s, %s',  $using,  $s18) . "\n\n" . $e->getMessage(),  $e->getResults());  }  return $this->webDriverElement($c['s18']);  }  public function fn8s($using, $s18) {  $c = $this->fn6(  'POST',  '/fn8s',  array(  'using' => $using,  's18' => $s18  ));  return array_filter(array_map(  array($this, 'webDriverElement'), $c['s18']));  }  private function webDriverElement($s18) {  return (array_key_exists('ELEMENT', (array) $s18)) ?  new WebDriverElement(  $this->fn23($s18['ELEMENT']),  $s18['ELEMENT']) :  null;  }  abstract protected function fn23($fn8_id);  } 