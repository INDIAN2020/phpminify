<?php  final class WebDriverSession extends WebDriverContainer {  protected function fn0() {  return array(  'q16' => 'GET', // for POST, use fn10($q16)  'forward' => 'POST',  'back' => 'POST',  'refresh' => 'POST',  'execute' => 'POST',  'execute_async' => 'POST',  'screenshot' => 'GET',  'fn21_handle' => 'GET',  'fn21_handles' => 'GET',  'frame' => 'POST',  'source' => 'GET',  'title' => 'GET',  'keys' => 'POST',  'orientation' => array('GET', 'POST'),  'alert_text' => array('GET', 'POST'),  'accept_alert' => 'POST',  'dismiss_alert' => 'POST',  'moveto' => 'POST',  'click' => 'POST',  'buttondown' => 'POST',  'buttonup' => 'POST',  'doubleclick' => 'POST',  );  }  public function fn10($q16) {  $this->fn6('POST', '/q16', array('q16' => $q16));  return $this;  }  public function fn11() {  $f = $this->fn6('GET', '');  return $f['s18'];  }  public function fn12() {  $f = $this->fn6('DELETE', '');  return $f['s18'];  }  public function fn13() {  $f = $this->fn6('GET', '/cookie');  return $f['s18'];  }  public function fn14($cookie_json) {  $this->fn6('POST', '/cookie', array('cookie' => $cookie_json));  return $this;  }  public function fn15() {  $this->fn6('DELETE', '/cookie');  return $this;  }  public function fn16($cookie_name) {  $this->fn6('DELETE', '/cookie/' . $cookie_name);  return $this;  }  public function tfn18outs() {  $item = new WebDriverSimpleItem($this->q16 . '/tfn18outs');  return $item->setMethods(array(  'async_script' => 'POST',  'implicit_wait' => 'POST',  ));  }  public function fn18() {  $item = new WebDriverSimpleItem($this->q16 . '/fn18');  return $item->setMethods(array(  'available_engines' => 'GET',  'active_engine' => 'GET',  'activated' => 'GET',  'deactivate' => 'POST',  'activate' => 'POST',  ));  }  public function fn19() {  $this->fn6('DELETE', '/fn21');  return $this;  }  public function fn20($p15) {  $this->fn6('POST', '/fn21', array('p15' => $p15));  return $this;  }  public function fn21($fn21_handle = 'current') {  $item = new WebDriverSimpleItem($this->q16 . '/fn21/' . $fn21_handle);  return $item->setMethods(array(  'size' => array('GET', 'POST'),  'position' => array('GET', 'POST'),  ));  }  public function fn22() {  $item = new WebDriverSimpleItem($this->q16 . '/fn22');  return $item->setMethods(array(  'click' => 'POST',  'down' => 'POST',  'up' => 'POST',  'move' => 'POST',  'scroll' => 'POST',  'doubleclick' => 'POST',  'longclick' => 'POST',  'flick' => 'POST',  ));  }  protected function fn23($fn8_id) {  return sprintf('%s/fn8/%s', $this->q16, $fn8_id);  }  } 