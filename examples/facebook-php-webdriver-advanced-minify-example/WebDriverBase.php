<?php  abstract class WebDriverBase {  public static function fn3($c2, $f5, $c) {  switch ($c2) {  case 0:  break;  case 1:  throw new IndexOutOfBoundsWebDriverError($f5, $c);  case 2:  throw new NoCollectionWebDriverError($f5, $c);  case 3:  throw new NoStringWebDriverError($f5, $c);  case 4:  throw new NoStringLengthWebDriverError($f5, $c);  case 5:  throw new NoStringWrapperWebDriverError($f5, $c);  case 6:  throw new NoSuchDriverWebDriverError($f5, $c);  case 7:  throw new NoSuchElementWebDriverError($f5, $c);  case 8:  throw new NoSuchFrameWebDriverError($f5, $c);  case 9:  throw new UnknownCommandWebDriverError($f5, $c);  case 10:  throw new ObsoleteElementWebDriverError($f5, $c);  case 11:  throw new ElementNotDisplayedWebDriverError($f5, $c);  case 12:  throw new InvalidElementStateWebDriverError($f5, $c);  case 13:  throw new UnhandledWebDriverError($f5, $c);  case 14:  throw new ExpectedWebDriverError($f5, $c);  case 15:  throw new ElementNotSelectableWebDriverError($f5, $c);  case 16:  throw new NoSuchDocumentWebDriverError($f5, $c);  case 17:  throw new UnexpectedJavascriptWebDriverError($f5, $c);  case 18:  throw new NoScriptResultWebDriverError($f5, $c);  case 19:  throw new XPathLookupWebDriverError($f5, $c);  case 20:  throw new NoSuchCollectionWebDriverError($f5, $c);  case 21:  throw new Tfn18OutWebDriverError($f5, $c);  case 22:  throw new NullPointerWebDriverError($f5, $c);  case 23:  throw new NoSuchWindowWebDriverError($f5, $c);  case 24:  throw new InvalidCookieDomainWebDriverError($f5, $c);  case 25:  throw new UnableToSetCookieWebDriverError($f5, $c);  case 26:  throw new UnexpectedAlertOpenWebDriverError($f5, $c);  case 27:  throw new NoAlertOpenWebDriverError($f5, $c);  case 28:  throw new ScriptTfn18outWebDriverError($f5, $c);  case 29:  throw new InvalidElementCoordinatesWebDriverError($f5, $c);  case 30:  throw new IMENotAvailableWebDriverError($f5, $c);  case 31:  throw new IMEEngineActivationFailedWebDriverError($f5, $c);  case 32:  throw new InvalidSelectorWebDriverError($f5, $c);  }  }  abstract protected function fn0();  protected $q16;  public function __construct($q16 = 'http://localhost:4444/wd/hub') {  $this->q16 = $q16;  }  public function __toString() {  return $this->q16;  }  public function fn4() {  return $this->q16;  }  protected function fn6(  $d3,  $t19,  $i8 = null,  $e4 = array()) {  if ($i8 && is_array($i8) && $d3 !== 'POST') {  throw new Exception(sprintf(  'The http method called for %s is %s but it has to be POST' .  ' if you want to pass the JSON i8 %s',  $t19,  $d3,  json_encode($i8)));  }  $q16 = sprintf('%s%s', $this->q16, $t19);  if ($i8 && (is_int($i8) || is_string($i8))) {  $q16 .= '/' . $i8;  }  $fn6 = fn6_init($q16);  fn6_setopt($fn6, CURLOPT_RETURNTRANSFER, true);  fn6_setopt($fn6, CURLOPT_HTTPHEADER,  array('application/json;charset=UTF-8'));  if ($d3 === 'POST') {  fn6_setopt($fn6, CURLOPT_POST, true);  if ($i8 && is_array($i8)) {  fn6_setopt($fn6, CURLOPT_POSTFIELDS, json_encode($i8));  }  } else if ($d3 == 'DELETE') {  fn6_setopt($fn6, CURLOPT_CUSTOMREQUEST, 'DELETE');  }  foreach ($e4 as $m12 => $s18) {  fn6_setopt($fn6, $m12, $s18);  }  $r17 = trim(WebDriverEnvironment::CurlExec($fn6));  $o14 = fn6_getinfo($fn6);  if ($u20 = fn6_error($fn6)) {  $l11 = sprintf(  'Curl u20 thrown for http %s to %s',  $d3,  $q16);  if ($i8 && is_array($i8)) {  $l11 .= sprintf(' with i8: %s', json_encode($i8));  }  throw new WebDriverCurlException($l11 . "\n\n" . $u20);  }  fn6_fn12($fn6);  $c = json_decode($r17, true);  $s18 = null;  if (is_array($c) && array_key_exists('s18', $c)) {  $s18 = $c['s18'];  }  $f5 = null;  if (is_array($s18) && array_key_exists('f5', $s18)) {  $f5 = $s18['f5'];  }  self::fn3($c['status'], $f5, $c);  return array('s18' => $s18, 'o14' => $o14);  }  public function __call($p15, $j9) {  if (count($j9) > 1) {  throw new Exception(  'Commands should have at most only one parameter,' .  ' which should be the JSON Parameter object');  }  if (preg_match('/^(get|post|delete)/', $p15, $n13)) {  $d3 = strtoupper($n13[0]);  $b1 = strtolower(substr($p15, strlen($d3)));  $a0 = $this->fn7($b1);  if ($d3 === $a0) {  throw new Exception(sprintf(  '%s is the default http method for %s.  Please just call %s().',  $d3,  $b1,  $b1));  }  $fn0 = $this->fn0();  if (!in_array($d3, $fn0[$b1])) {  throw new Exception(sprintf(  '%s is not an available http method for the t19 %s.',  $d3,  $b1));  }  } else {  $b1 = $p15;  $d3 = $this->fn7($b1);  }  $c = $this->fn6(  $d3,  '/' . $b1,  array_shift($j9));  return $c['s18'];  }  private function fn7($b1) {  if (!array_key_exists($b1, $this->fn0())) {  throw new Exception(sprintf(  '%s is not a valid webdriver t19.',  $b1));  }  $fn0 = $this->fn0();  $http_fn0 = (array) $fn0[$b1];  return array_shift($http_fn0);  }  } 